basePath: /
definitions:
  models.BalanceResponse:
    properties:
      current:
        type: number
      withdrawn:
        type: number
    type: object
  models.BalanceWithdrawRequest:
    properties:
      order:
        type: string
      sum:
        type: number
    type: object
  models.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.OrderUser:
    properties:
      accrual:
        type: number
      number:
        type: string
      status:
        $ref: '#/definitions/models.OrderUserStatus'
      uploaded_at:
        type: string
    type: object
  models.OrderUserStatus:
    enum:
    - NEW
    - PROCESSING
    - INVALID
    - PROCESSED
    type: string
    x-enum-varnames:
    - OrderUserStatusNew
    - OrderUserStatusProcessing
    - OrderUserStatusInvalid
    - OrderUserStatusProcessed
  models.RegisterRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.WithdrawalResponse:
    properties:
      order:
        type: string
      processed_at:
        type: string
      sum:
        description: рубли
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a Gophermart loyalty system API server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Gophermart Loyalty System API
  version: "1.0"
paths:
  /api/user/balance:
    get:
      consumes:
      - application/json
      description: Get current user balance and withdrawn amount
      produces:
      - application/json
      responses:
        "200":
          description: User balance information
          schema:
            $ref: '#/definitions/models.BalanceResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user balance
      tags:
      - balance
  /api/user/balance/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw funds from user's balance
      parameters:
      - description: Withdraw request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BalanceWithdrawRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully withdrawn
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "402":
          description: Insufficient funds
          schema:
            type: string
        "422":
          description: Invalid order number format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Withdraw from balance
      tags:
      - balance
  /api/user/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with login and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login user
      tags:
      - auth
  /api/user/orders:
    get:
      consumes:
      - application/json
      description: Get list of orders uploaded by user
      produces:
      - application/json
      responses:
        "200":
          description: List of user's orders
          schema:
            items:
              $ref: '#/definitions/models.OrderUser'
            type: array
        "204":
          description: No orders found
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user's orders
      tags:
      - orders
    post:
      consumes:
      - text/plain
      description: Upload order number for accrual calculation
      parameters:
      - description: Order number
        in: body
        name: order
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order already uploaded
          schema:
            type: string
        "202":
          description: Order accepted for processing
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "409":
          description: Order already uploaded by another user
          schema:
            type: string
        "422":
          description: Invalid order number format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Upload order number
      tags:
      - orders
  /api/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user with login and password
      parameters:
      - description: Register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully registered
          schema:
            type: string
        "400":
          description: Invalid request format
          schema:
            type: string
        "409":
          description: Login already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
  /api/user/withdrawals:
    get:
      consumes:
      - application/json
      description: Get list of withdrawals made by user
      produces:
      - application/json
      responses:
        "200":
          description: List of user's withdrawals
          schema:
            items:
              $ref: '#/definitions/models.WithdrawalResponse'
            type: array
        "204":
          description: No withdrawals found
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user's withdrawals
      tags:
      - balance
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
